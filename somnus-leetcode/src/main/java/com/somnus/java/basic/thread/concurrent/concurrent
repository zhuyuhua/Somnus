该包存放并发编程的所有示例!

Java 5.0里新加了4个协调线程间进程的同步装置，它们分别是： 

1、Semaphore
	Semaphore是一个线程同步的辅助类，可以维护当前访问自身的线程个数，并提供了同步机制。
	使用Semaphore可以控制同时访问资源的线程个数，例如，实现一个文件允许的并发访问数。
	
2、CountDownLatch
	CountDownLatch是一个同步辅助类，犹如倒计时计数器，创建对象时通过构造方法设置初始值，
	调用CountDownLatch对象的await()方法则处于等待状态，调用countDown()方法就将计数器减1，
	当计数到达0时，则所有等待者或单个等待者开始执行。
	
3、CyclicBarrier
	CyclicBarrier是一个同步辅助类，它允许一组线程互相等待，直到到达某个公共屏障点 (common barrier point)。
	在涉及一组固定大小的线程的程序中，这些线程必须不时地互相等待，此时 CyclicBarrier 很有用。
	因为该 barrier 在释放等待线程后可以重用，所以称它为循环 的 barrier。
	CyclicBarrier类似于CountDownLatch也是个计数器， 不同的是CyclicBarrier数的是调用了CyclicBarrier.await()进入等待的线程数， 当线程数达到了CyclicBarrier初始时规定的数目时，所有进入等待状态的线程被唤醒并继续。
	CyclicBarrier就象它名字的意思一样，可看成是个障碍， 所有的线程必须到齐后才能一起通过这个障碍。
	CyclicBarrier初始时还可带一个Runnable的参数，此Runnable任务在CyclicBarrier的数目达到后，所有其它线程被唤醒前被执行。
	
 4、Exchanger. 
 	两个线程可以交换对象的同步点。每个线程都在进入 exchange 方法时给出某个对象，并接受其他线程返回时给出的对象。

　　